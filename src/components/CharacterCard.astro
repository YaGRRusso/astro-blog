---
import { Image } from "astro:assets"

import type { HTMLAttributes } from "astro/types"
import type { Character } from "rickmortyapi"

import { getTranslation } from "@/utils/i18n"

interface Props extends Omit<HTMLAttributes<"div">, "id">, Character {}

const { episode, gender, id, image, location, name, origin, species, status, ...props } = Astro.props

const { t } = getTranslation(Astro.currentLocale)

const linkClass =
  "group-data-[status=alive]:link-success group-data-[status=dead]:link-error group-data-[status=unknown]:link-warning"
const statusClass =
  "group-data-[status=alive]:status-success group-data-[status=dead]:status-error group-data-[status=unknown]:status-warning"
---

<div class="group card card-side bg-base-200" data-status={status.toLowerCase()} id={id.toString()} {...props}>
  <figure class="w-full max-w-20 sm:max-w-32">
    <Image src={image} alt={name} loading="eager" width={32} height={32} />
  </figure>
  <div class="card-body flex-1 gap-4">
    <div class="flex flex-col">
      <div class="flex items-center justify-between gap-2">
        <a href="" class="card-title link link-hover">{name}</a>
        <div class="tooltip">
          <div class="tooltip-content">
            {t("components.characterCard.status." + status.toLowerCase(), {}, t("commons.unknown"))}
          </div>
          <div class:list={["status", statusClass]}></div>
        </div>
      </div>
      <span class="text-muted"
        >{t("components.characterCard.gender." + gender.toLowerCase(), {}, t("commons.unknown"))} - {
          t("components.characterCard.especies." + species.toLocaleLowerCase(), {}, t("commons.unknown"))
        }</span
      >
    </div>
    <p>
      {
        t("components.characterCard.description", {
          name,
          origin: (
            <a class:list={["link link-hover", linkClass]} href="">
              {origin.name}
            </a>
          ),
          episodes: (
            <button class:list={["link link-hover", linkClass]}>
              {t("components.characterCard.episodes", { count: episode.length })}
            </button>
          ),
          location: (
            <a class:list={["link link-hover", linkClass]} href="">
              {location.name}
            </a>
          ),
        })
      }
    </p>
  </div>
</div>
